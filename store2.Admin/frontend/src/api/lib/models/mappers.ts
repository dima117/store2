/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRest from "@azure/ms-rest-js";


export const PageListItemDto: msRest.CompositeMapper = {
  serializedName: "PageListItemDto",
  type: {
    name: "Composite",
    className: "PageListItemDto",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      code: {
        required: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      title: {
        required: true,
        serializedName: "title",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PageInput: msRest.CompositeMapper = {
  serializedName: "PageInput",
  type: {
    name: "Composite",
    className: "PageInput",
    modelProperties: {
      code: {
        required: true,
        serializedName: "code",
        constraints: {
          MaxLength: 64,
          MinLength: 0,
          Pattern: /^[a-z0-9-]+$/
        },
        type: {
          name: "String"
        }
      },
      title: {
        required: true,
        serializedName: "title",
        constraints: {
          MaxLength: 255,
          MinLength: 0
        },
        type: {
          name: "String"
        }
      },
      body: {
        required: true,
        serializedName: "body",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const PageDto: msRest.CompositeMapper = {
  serializedName: "PageDto",
  type: {
    name: "Composite",
    className: "PageDto",
    modelProperties: {
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Uuid"
        }
      },
      code: {
        required: true,
        serializedName: "code",
        type: {
          name: "String"
        }
      },
      title: {
        required: true,
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      body: {
        required: true,
        serializedName: "body",
        type: {
          name: "String"
        }
      }
    }
  }
};
